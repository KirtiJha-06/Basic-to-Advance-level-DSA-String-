TC: O(N)
SC: O(1)

int minFlips (string S) {
    int flips1 = 0; // For pattern 010101...
    int flips2 = 0; // For pattern 101010...
    
    // Iterate through each character of the string
    for(int i = 0; i < S.size(); i++) {
        if(i % 2 == 0) {  // Check for even index positions
            if(S[i] != '0') { // If the character at even position is not '0'
                flips1++;  // Increment flips1 (to match the "010101..." pattern)
            }
            else{
                flips2++;  // Increment flips2 (to match the "101010..." pattern)
            }
        }
        else if(i % 2 != 0) {  // Check for odd index positions
            if(S[i] != '1') {  // If the character at odd position is not '1'
                flips1++;  // Increment flips1 (to match the "010101..." pattern)
            }
            else{
                flips2++;  // Increment flips2 (to match the "101010..." pattern)
            }
        }
    }
    // Return the minimum number of flips needed
    return min(flips1, flips2);
}
