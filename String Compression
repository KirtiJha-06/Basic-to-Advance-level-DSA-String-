TC : O(N)
SC : O(1)
class Solution {
public:
    int compress(vector<char>& chars) {
        int n = chars.size();
        int idx = 0;

        for (int i = 0; i < n;) {
            char ch = chars[i];
            int count = 0;

            // Count consecutive occurrences of the same character
            while (i < n && chars[i] == ch) {
                count++;
                i++;
            }

            // Append character and its count (if greater than 1)
            chars[idx++] = ch;
            if (count > 1) {
                for (char digit : to_string(count)) {
                    chars[idx++] = digit;
                }
            }
        }

        // Resize to fit the compressed result
        chars.resize(idx);
        return idx;
    }
};
